{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let UserAuthService = /*#__PURE__*/(() => {\n  class UserAuthService {\n    constructor() {}\n    setRoles(roles) {\n      //array type roles [] has to be convert into string to store it into data storage that can be done by JSON.stringify\n      localStorage.setItem(\"roles\", JSON.stringify(roles));\n    }\n    //localStorage.getItem(\"roles\")-->return string, but to get array type return use JSON.parse\n    getRoles() {\n      return JSON.parse(localStorage.getItem(\"roles\"));\n    }\n    setToken(jwtToken) {\n      localStorage.setItem(\"jwtToken\", jwtToken);\n    }\n    getToken() {\n      return localStorage.getItem(\"jwtToken\");\n    }\n    clear() {\n      localStorage.clear();\n    }\n    isLoggedIn() {\n      return this.getRoles() && this.getToken();\n    }\n    isAdmin() {\n      const roles = this.getRoles();\n      return roles[0].roleName === 'Admin';\n    }\n    isCustomer() {\n      const roles = this.getRoles();\n      return roles[0].roleName === 'Customer';\n    }\n    isManager() {\n      const roles = this.getRoles();\n      return roles[0].roleName === 'Manager';\n    }\n    isEngineer() {\n      const roles = this.getRoles();\n      return roles[0].roleName === 'Engineer';\n    }\n    static #_ = this.ɵfac = function UserAuthService_Factory(t) {\n      return new (t || UserAuthService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserAuthService,\n      factory: UserAuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserAuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}