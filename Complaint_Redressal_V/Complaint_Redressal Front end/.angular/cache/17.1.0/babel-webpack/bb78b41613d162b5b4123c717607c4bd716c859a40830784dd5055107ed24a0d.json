{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ComplaintService = /*#__PURE__*/(() => {\n  class ComplaintService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.PATH_API = \"http://localhost:8080\";\n    }\n    regNewComplaint(registerData) {\n      return this.httpClient.post(this.PATH_API + '/add/new/complaint', registerData);\n    }\n    deleteComplaint(complaintId) {\n      return this.httpClient.delete(this.PATH_API + '/delete/complaint/' + complaintId);\n    }\n    getComplaintList() {\n      return this.httpClient.get(this.PATH_API + '/get/complaint/list');\n    }\n    markAsResolved(complaintId) {\n      return this.httpClient.get(this.PATH_API + '/markAsResolved/' + complaintId);\n    }\n    markAsWip(complaintId) {\n      return this.httpClient.get(this.PATH_API + '/markAsWip/' + complaintId);\n    }\n    markAsInReview(complaintId) {\n      return this.httpClient.get(this.PATH_API + '/markAsInReview/' + complaintId);\n    }\n    getComplaintById(complaintId) {\n      return this.httpClient.get(this.PATH_API + '/getComplaintById/' + complaintId);\n    }\n    getMyComplaints() {\n      return this.httpClient.get(this.PATH_API + '/get/mycomplaints');\n    }\n    getComplaintListEngg() {\n      return this.httpClient.get(this.PATH_API + '/get/complaint/list/engineer');\n    }\n    static #_ = this.ɵfac = function ComplaintService_Factory(t) {\n      return new (t || ComplaintService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ComplaintService,\n      factory: ComplaintService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ComplaintService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}